{"ast":null,"code":"var _jsxFileName = \"D:\\\\React Project\\\\14-challenge-solution\\\\frontend\\\\src\\\\pages\\\\NewEvent.js\";\nimport EventForm from \"../components/EventForm\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction NewEventPage() {\n  return /*#__PURE__*/_jsxDEV(EventForm, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 4,\n    columnNumber: 10\n  }, this);\n}\n_c = NewEventPage;\nexport default NewEventPage;\nexport async function action({\n  params,\n  request\n}) {\n  const data = await request.FormData();\n  const eventData = {\n    title: data.get(\"title\"),\n    image: data.get(\"image\"),\n    date: data.get(\"date\"),\n    description: data.get(\"description\")\n  };\n  const rerponse = fetch(\"http://localhost:8080/events\", {\n    method: \"POST\",\n    headers: {\n      \"content-type\": \"application/json\"\n    },\n    body: JSON.stringify(eventData)\n  });\n  if (!rerponse.ok) {\n    throw Json({\n      message: 'Could Not Save Event Data'\n    }, {\n      status: 500\n    });\n  }\n}\nvar _c;\n$RefreshReg$(_c, \"NewEventPage\");","map":{"version":3,"names":["EventForm","jsxDEV","_jsxDEV","NewEventPage","fileName","_jsxFileName","lineNumber","columnNumber","_c","action","params","request","data","FormData","eventData","title","get","image","date","description","rerponse","fetch","method","headers","body","JSON","stringify","ok","Json","message","status","$RefreshReg$"],"sources":["D:/React Project/14-challenge-solution/frontend/src/pages/NewEvent.js"],"sourcesContent":["import EventForm from \"../components/EventForm\";\n\nfunction NewEventPage() {\n  return <EventForm/>;\n}\n\nexport default NewEventPage;\n\nexport async function action({ params, request }) {\n  const data = await request.FormData();\n  const eventData = {\n    title: data.get(\"title\"),\n    image: data.get(\"image\"),\n    date: data.get(\"date\"),\n    description: data.get(\"description\"),\n  };\n  const rerponse =fetch(\"http://localhost:8080/events\", {\n    method: \"POST\",\n    headers: {\n      \"content-type\": \"application/json\",\n    },\n    body: JSON.stringify(eventData),\n  });\n  if(!rerponse.ok) {\n    throw Json(\n      {message:'Could Not Save Event Data'},\n      {status:500}\n    );\n  }\n}\n\n"],"mappings":";AAAA,OAAOA,SAAS,MAAM,yBAAyB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhD,SAASC,YAAYA,CAAA,EAAG;EACtB,oBAAOD,OAAA,CAACF,SAAS;IAAAI,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAC,CAAC;AACrB;AAACC,EAAA,GAFQL,YAAY;AAIrB,eAAeA,YAAY;AAE3B,OAAO,eAAeM,MAAMA,CAAC;EAAEC,MAAM;EAAEC;AAAQ,CAAC,EAAE;EAChD,MAAMC,IAAI,GAAG,MAAMD,OAAO,CAACE,QAAQ,CAAC,CAAC;EACrC,MAAMC,SAAS,GAAG;IAChBC,KAAK,EAAEH,IAAI,CAACI,GAAG,CAAC,OAAO,CAAC;IACxBC,KAAK,EAAEL,IAAI,CAACI,GAAG,CAAC,OAAO,CAAC;IACxBE,IAAI,EAAEN,IAAI,CAACI,GAAG,CAAC,MAAM,CAAC;IACtBG,WAAW,EAAEP,IAAI,CAACI,GAAG,CAAC,aAAa;EACrC,CAAC;EACD,MAAMI,QAAQ,GAAEC,KAAK,CAAC,8BAA8B,EAAE;IACpDC,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MACP,cAAc,EAAE;IAClB,CAAC;IACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACZ,SAAS;EAChC,CAAC,CAAC;EACF,IAAG,CAACM,QAAQ,CAACO,EAAE,EAAE;IACf,MAAMC,IAAI,CACR;MAACC,OAAO,EAAC;IAA2B,CAAC,EACrC;MAACC,MAAM,EAAC;IAAG,CACb,CAAC;EACH;AACF;AAAC,IAAAtB,EAAA;AAAAuB,YAAA,CAAAvB,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}